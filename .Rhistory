library(ggmap)
library(ggExtra)
library(dplyr)
library(data.table)
library(tidyr)
library(readr)
# Set working directory to source location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load data ----
LPIdata_Feb2016 <- read.csv("LPIdata_Feb2016.csv")
LPIdata_Feb2016 <- LPIdata_Feb2016[-3796,]  # We should delete these rows and save the file again just for the purpose of the tutorial since they mess up plots
LPIdata_Feb2016 <- LPIdata_Feb2016[-3798,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-3825,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-4193,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-7886,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-13101,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-14354,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15310,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-15327,]
LPIdata_Feb2016 <- LPIdata_Feb2016[-16412,]
save(LPIdata_Feb2016, file = "LPIdata_Feb2016.RData")
load("LPIdata_Feb2016.RData")
# Inspect data ----
View(head(LPIdata_Feb2016))
names(LPIdata_Feb2016) <- gsub(".", "_", names(LPIdata_Feb2016), fixed = TRUE) %>%
tolower(.)
names(LPIdata_Feb2016) <- names(LPIdata_Feb2016) %>%
gsub(".", "_", ., fixed = TRUE) %>%
tolower(.)
## Make a column for genus_species_id
LPIdata_Feb2016$genus_species_id <- paste(LPIdata_Feb2016$genus, LPIdata_Feb2016$species, LPIdata_Feb2016$id, sep = "_")
LPIdata_Feb2016$genus_species <- paste(LPIdata_Feb2016$genus, LPIdata_Feb2016$species, sep = "_")
length(unique(LPIdata_Feb2016$genus_species_id))
length(unique(LPIdata_Feb2016$genus_species))
length(unique(LPI_long$id))
LPIdata_Feb2016$country_list <- gsub(",","",LPIdata_Feb2016$country_list, fixed = TRUE)
LPIdata_Feb2016$biome <- gsub("/","",LPIdata_Feb2016$biome, fixed = TRUE)
View(LPI_long[c(1:5,500:505,1000:1005),])
## Transform to long format, add useful columns, remove rows without sufficient data
LPI_long <- LPIdata_Feb2016 %>%
gather("year", "pop", select = 26:70) %>%  # Transform to long format
names(LPIdata_Feb2016) <- gsub(".", "_", names(LPIdata_Feb2016), fixed = TRUE) %>%
tolower(.)
names(LPIdata_Feb2016) <- names(LPIdata_Feb2016) %>%
gsub(".", "_", ., fixed = TRUE) %>%
names(LPIdata_Feb2016) <- gsub(".", "_", names(LPIdata_Feb2016), fixed = TRUE) %>%
tolower(.)
names(LPIdata_Feb2016) <- names(LPIdata_Feb2016) %>%
gsub(".", "_", ., fixed = TRUE) %>%
tolower(.)
## Make a column for genus_species_id
LPIdata_Feb2016$genus_species_id <- paste(LPIdata_Feb2016$genus, LPIdata_Feb2016$species, LPIdata_Feb2016$id, sep = "_")
LPIdata_Feb2016$genus_species <- paste(LPIdata_Feb2016$genus, LPIdata_Feb2016$species, sep = "_")
length(unique(LPIdata_Feb2016$genus_species_id))
length(unique(LPIdata_Feb2016$genus_species))
length(unique(LPI_long$id))
gather("year", "pop", select = 26:70) %>%  # Transform to long format
mutate(year = parse_number(.$year)) %>%  # Deprecated, extract_numeric() -> parse_numeric() -> parse_number(), extract numeric from atomic
distinct(.) %>%  # Remove duplicate rows
filter(., is.finite(pop)) %>%  # Keep only rows with a population estimate
group_by(., common_name, genus_species_id) %>%  # group rows so that each group is one population (id) from one species (species+Common.Name)
mutate(., maxyear = max(year), minyear = min(year)) %>%  # Create a column for the max and min years for each group
mutate(., lengthyear = maxyear-minyear) %>%  # Create a column for the length of time data available
ungroup(.) %>%  # Remove groupings
group_by(., common_name, genus_species_id, units) %>%  # Groups Measurement_type(Units)>population(id)>species(Common.Name+species)
mutate(., scalepop = (pop-min(pop))/(max(pop)-min(pop))) %>%  # Scale population trend from 0 to 1
filter(., is.finite(scalepop)) %>%  # Remove rows without a scalepop
mutate(., meanpop = mean(pop)) %>%  # Create column for mean population
ungroup(.) %>%
group_by(., common_name, genus_species_id) %>%
mutate(., meanpop.size = mean(meanpop)) %>%  # Create column for mean mean population
ungroup(.)
LPI_long <- LPIdata_Feb2016 %>%
gather("year", "pop", select = 26:70) %>%  # Transform to long format
mutate(year = parse_number(.$year)) %>%  # Deprecated, extract_numeric() -> parse_numeric() -> parse_number(), extract numeric from atomic
distinct(.) %>%  # Remove duplicate rows
filter(., is.finite(pop)) %>%  # Keep only rows with a population estimate
group_by(., common_name, genus_species_id) %>%  # group rows so that each group is one population (id) from one species (species+Common.Name)
mutate(., maxyear = max(year), minyear = min(year)) %>%  # Create a column for the max and min years for each group
mutate(., lengthyear = maxyear-minyear) %>%  # Create a column for the length of time data available
ungroup(.) %>%  # Remove groupings
group_by(., common_name, genus_species_id, units) %>%  # Groups Measurement_type(Units)>population(id)>species(Common.Name+species)
mutate(., scalepop = (pop-min(pop))/(max(pop)-min(pop))) %>%  # Scale population trend from 0 to 1
filter(., is.finite(scalepop)) %>%  # Remove rows without a scalepop
mutate(., meanpop = mean(pop)) %>%  # Create column for mean population
ungroup(.) %>%
group_by(., common_name, genus_species_id) %>%
mutate(., meanpop.size = mean(meanpop)) %>%  # Create column for mean mean population
ungroup(.)
LPI_models <- LPI_long %>%
group_by(., common_name, genus_species_id, units) %>%  # Groups Measurement_type(Units)>population(id)>species(Common.Name+species)
do(mod = lm(scalepop~year, data = .)) %>%  # Create a linear model for each group
mutate(., n = df.residual(mod),  # Create columns: degrees of freedom
intercept=summary(mod)$coeff[1],  # intercept coefficient
slope=summary(mod)$coeff[2],  # slope coefficient
intercept_se=summary(mod)$coeff[3],  # standard error of intercept
slope_se=summary(mod)$coeff[4],  # standard error of slope
intercept_p=summary(mod)$coeff[7],  # p value of intercept
slope_p=summary(mod)$coeff[8]) %>%  # p value of slope
filter(., n > 5) # Remove rows where degrees of freedom <5
LPI_models <- LPI_long %>%
group_by(., common_name, genus_species_id) %>%  # Groups Measurement_type(Units)>population(id)>species(Common.Name+species)
do(mod = lm(scalepop~year, data = .)) %>%  # Create a linear model for each group
mutate(., n = df.residual(mod),  # Create columns: degrees of freedom
intercept=summary(mod)$coeff[1],  # intercept coefficient
slope=summary(mod)$coeff[2],  # slope coefficient
intercept_se=summary(mod)$coeff[3],  # standard error of intercept
slope_se=summary(mod)$coeff[4],  # standard error of slope
intercept_p=summary(mod)$coeff[7],  # p value of intercept
slope_p=summary(mod)$coeff[8]) %>%  # p value of slope
filter(., n > 5) # Remove rows where degrees of freedom <5
LPI_models <- LPI_long %>%
group_by(., genus_species_id) %>%  # Groups Measurement_type(Units)>population(id)>species(Common.Name+species)
do(mod = lm(scalepop~year, data = .)) %>%  # Create a linear model for each group
mutate(., n = df.residual(mod),  # Create columns: degrees of freedom
intercept=summary(mod)$coeff[1],  # intercept coefficient
slope=summary(mod)$coeff[2],  # slope coefficient
intercept_se=summary(mod)$coeff[3],  # standard error of intercept
slope_se=summary(mod)$coeff[4],  # standard error of slope
intercept_p=summary(mod)$coeff[7],  # p value of intercept
slope_p=summary(mod)$coeff[8]) %>%  # p value of slope
filter(., n > 5) # Remove rows where degrees of freedom <5
View(LPI_models)
View(LPI_models)
?split
LPI_long_list <- split(LPI_long, f = LPI_long$genus_species_id)
1+1
lapply(LPI_long_list, function(x) lm(scalepop ~ year, data = x))
LPI_list_lm <- lapply(LPI_long_list, function(x) lm(scalepop ~ year, data = x))
LPI_list_lm[[1]]
LPI_list_lm[[1]]$coeff[1]
LPI_list_lm[[1]]$coeff[2]
View(LPI_models)
summary(LPI_list_lm[[1]])$coeff[2]
summary(LPI_list_lm[[1]])$coeff[1]
names(LPI_list_lm[[1]])$coeff[1]
names(LPI_list_lm[[1]])
LPI_list_lm[1]
LPI_list_lm[[1]]
LPI_list_lm[[1]][1]
LPI_list_lm[1][1]
LPI_list_lm[1][1]
LPI_list_lm[[1]][1]
LPI_list_lm[1][2]
LPI_list_lm[[1]][2]
LPI_list_lm[[1]][3]
LPI_list_lm[1][3]
LPI_list_lm[[1]][3]
LPI_list_lm[[1]][3]
LPI_list_lm[[1]][2]
LPI_list_lm[[1]][1]
head(LPI_list_lm)
LPI_list_lm[[1]][1]$coefficients
LPI_list_lm[[1]][1]$coeff[1]
LPI_list_lm[[1]][1]$coefficients[1]
Resids <- lapply(LPI_lon_list, "[", 1)
Resids <- lapply(LPI_long_list, "[", 1)
Resids <- unlist(lapply(LPI_long_list, "[", 1))
Resids[1]
View(LPI_models)
Resids[2]
Resids[3]
LPI_models <- LPI_long %>%
group_by(., genus_species_id) %>%  # Groups Measurement_type(Units)>population(id)>species(Common.Name+species)
do(mod = lm(scalepop~year, data = .)) %>%  # Create a linear model for each group
mutate(., n = df.residual(mod),  # Create columns: degrees of freedom
intercept=summary(mod)$coeff[1],  # intercept coefficient
slope=summary(mod)$coeff[2],  # slope coefficient
intercept_se=summary(mod)$coeff[3],  # standard error of intercept
slope_se=summary(mod)$coeff[4],  # standard error of slope
intercept_p=summary(mod)$coeff[7],  # p value of intercept
slope_p=summary(mod)$coeff[8]) %>%  # p value of slope
filter(., n > 5) # Remove rows where degrees of freedom <5
View(LPI_long)
View(LPI_models)
Resids <- unlist(lapply(LPI_long_list, function(x) df.residual(x)))
Resids[3]
Resids <- lapply(LPI_long_list, function(x) df.residual(x))
warnings()
df.residual(LPI_list_lm[[1]])
df.residual(LPI_list_lm[[500]])
df.residual(LPI_list_lm[[2]])
df.residual(LPI_list_lm[[3]])
df.residual(LPI_list_lm[[300]])
df.residual(LPI_list_lm[[301]])
LPI_long_list[1]
LPI_long_list[[1]]
head(LPI_long_list[[1]])
View(head(LPI_long_list[[1]]))
View(head(LPI_long_list[[1]]))
LPI_list_lm <- lapply(LPI_long_list, function(x) lm(scalepop ~ year, data = x))
df.residual(LPI_list_lm[[301]])
df.residual(LPI_list_lm[[1]])
LPI_list_lm[[1]]
typeof(LPI_list_lm[[1]])
View(LPI_list_lm[[1]])
View(as.data.frame(LPI_list_lm[[1]])()
View(as.data.frame(LPI_list_lm[[1]]))
View(as.data.frame(LPI_list_lm[[1]]))
View(LPI_models)
typeof(LPI_models$mod)
typeof(LPI_models$mod[1])
typeof(LPI_models$n[1])
typeof(LPI_list_lm[[1]])
typeof(LPI_models$n[1][[1]])  # integer
df.residual(LPI_list_lm[[1]])
df.residual(LPI_list_lm[[5]])
df.residual(LPI_models$mod[1])  # list
df.residual(LPI_models$mod[1])  # list
df.residual(LPI_models$mod[[5]])  # list
df.residual(LPI_list_lm[[5]])
df.residual(LPI_models$mod[[5]])  # list
df.residual(LPI_models$mod[[1]])  # list
df.residual(LPI_models$mod[[2]])  # list
df.residual(LPI_models$mod[[3]])  # list
df.residual(LPI_models$mod[[4]])  # list
df.residual(LPI_models$mod[[5]])  # list
df.residual(LPI_models$mod[[6]])  # list
df.residual(LPI_models$mod[[7]])  # list
df.residual(LPI_models$mod[[8]])  # list
df.residual(LPI_list_lm[[1]])
LPI_unlist_lm <- unlist(LPI_list_lm)
LPI_unlist_lm
LPI_unlist_lm[1]
LPI_unlist_lm[[1]]$coeff
typeof(LPI_long_list[[1]])  # list
LPI_lapply_lm <- lapply(LPI_list_lm, function(x) df.residual(x))
head(LPI_lapply_lm)
LPI_lapply_lm$n <- unlist(lapply(LPI_list_lm, function(x) df.residual(x)))
LPI_lapply_lm$n <- sapply(LPI_list_lm, function(x) df.residual(x)))
LPI_lapply_lm$n <- sapply(LPI_list_lm, function(x) df.residual(x))
head(LPI_lapply_lm)
LPI_lapply_lm$n <- unlist(sapply(LPI_list_lm, function(x) df.residual(x)))
head(LPI_lapply_lm)
rm(LPI_lapply_lm)
LPI_lapply_lm$n <- unlist(sapply(LPI_list_lm, function(x) df.residual(x)))
unlist(sapply(LPI_list_lm, function(x) df.residual(x)))
unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x))))
LPI_lapply_lm <- unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x))))
LPI_lapply_lm$n <- unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x))))
LPI_lapply_lm$n <- data.frame(unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
)
LPI_lapply_lm <- data.frame(unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
)
LPI_lapply_lm <- data.frame(unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x))))
)
View(LPI_lapply_lm)
LPI_lapply_lm <- data.frame(unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1])))
)
View(LPI_lapply_lm)
LPI_lapply_lm <- data.frame(unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
)
View(LPI_lapply_lm)
LPI_lapply_lm <- data.frame(unlist(sapply(LPI_list_lm, function(x) names(x))),
unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
)
LPI_lapply_lm <- data.frame(unlist(sapply(LPI_list_lm, function(x) names(x))),
unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1,1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2,1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1,2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2,2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1,4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2,4])))
)
LPI_lapply_lm <- data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1,1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2,1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1,2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2,2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1,4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2,4])))
)
View(LPI_lapply_lm)
length(is.finite(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..summary.x..coeff.1...2)
length(is.finite(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..summary.x..coeff.1...2))
length(complete.cases(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..summary.x..coeff.1...2))
length(complete.cases(LPI_lapply_lm))
length(complete.cases(LPI_lapply_lm[complete.cases(LPI_lapply_lm)]))
length(complete.cases(LPI_lapply_lm[complete.cases(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..summary.x..coeff.2..]))
length(LPI_lapply_lm[complete.cases(LPI_lapply_lm),])
length(LPI_lapply_lm[complete.cases(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..summary.x..coeff.1...1),])
length(LPI_lapply_lm[,complete.cases(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..summary.x..coeff.1...1)])
LPI_list_lm[[1]]
View(head(LPI_long_list[[1]]))
filter(LPI_lapply_lm$unname.unlist.sapply.LPI_list_lm..function.x..df.residual.x.... > 5)
length(filter(LPI_lapply_lm$"unname.unlist.sapply.LPI_list_lm..function.x..df.residual.x...." > 5))
LPI_lapply_lm <- data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
)
warnings()
LPI_lapply_lm <- data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
n = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
LPI_lapply_lm <- data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
"n" = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
)
length(filter(LPI_lapply_lm$n > 5)
)
length(LPI_lapply_lm[n > 5,]
)
length(LPI_lapply_lm[which(LPI_lapply_lm$n > 5),])
length(LPI_lapply_lm[,which(LPI_lapply_lm$n > 5)])
View(LPI_lapply_lm)
typeof(LPI_lapply_lm)
LPI_lapply_lm <- as.data.frame(data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
"n" = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
))
typeof(LPI_lapply_lm)
LPI_lapply_lm[n > 5,]
LPI_lapply_lm[n > 5]
LPI_lapply_lm <- as.data.frame(data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
"n" = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
)) %>%
filter(., n > 5)
View(LPI_lapply_lm)
View(LPI_models)
LPI_lapply_lm <- as.data.frame(data.frame(# unlist(sapply(LPI_list_lm, function(x) names(x))),
"n" = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
"intercept" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
"slope" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
"intercept_se" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
"slope_se" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
"intercept_p" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
"slope_p" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
))
View(LPI_lapply_lm)
?lm
View(head(LPI_long_list[[1]]))
View(head(LPI_long_list[[5]]))
LPI_list_lm <- lapply(LPI_long_list, function(x) x$genus_species_id[1] <- lm(scalepop ~ year, data = x, ))
warnings()
LPI_list_lm <- lapply(LPI_long_list, function(x) lm(scalepop ~ year, data = x, ))
names(LPI_list_lm)
LPI_lapply_lm <- data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
"intercept" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
"slope" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
"intercept_se" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
"slope_se" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
"intercept_p" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
"slope_p" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
)
View(LPI_lapply_lm)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unname(unlist(sapply(LPI_list_lm, function(x) df.residual(x)))),
"intercept" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
"slope" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
"intercept_se" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
"slope_se" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
"intercept_p" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
"slope_p" = unname(unlist(sapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
), n > 5)
View(LPI_lapply_lm)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unname(unlist(lapply(LPI_list_lm, function(x) df.residual(x)))),
"intercept" = unname(unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1]))),
"slope" = unname(unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2]))),
"intercept_se" = unname(unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3]))),
"slope_se" = unname(unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4]))),
"intercept_p" = unname(unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7]))),
"slope_p" = unname(unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8])))
), n > 5)
View(LPI_lapply_lm)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
View(LPI_lapply_lm)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = lapply(LPI_list_lm, function(x) summary(x)$coeff[1]),
"slope" = lapply(LPI_list_lm, function(x) summary(x)$coeff[2]),
"intercept_se" = lapply(LPI_list_lm, function(x) summary(x)$coeff[3]),
"slope_se" = lapply(LPI_list_lm, function(x) summary(x)$coeff[4]),
"intercept_p" = lapply(LPI_list_lm, function(x) summary(x)$coeff[7]),
"slope_p" = lapply(LPI_list_lm, function(x) summary(x)$coeff[8]), n > 5)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
View(LPI_lapply_lm)
View(LPI_models)
LPI_list_lm[[1]]$model
as.vector(LPI_list_lm[[1]])
as.string(LPI_list_lm[[1]])
as.call(LPI_list_lm[[1]])
typeof(LPI_list_lm[[1]])
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"mod" = unlist(lapply(LPI_list_lm, function(x) [[x]])),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"mod" = unlist(lapply(LPI_list_lm, "[[")),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"mod" = unlist(lapply(LPI_list_lm, function(x) "[["(x))),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
Q
LPI_lapply_lm <- filter(data.frame(
"genus_species_id" = names(LPI_list_lm),
"n" = unlist(lapply(LPI_list_lm, function(x) df.residual(x))),
"intercept" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[1])),
"slope" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[2])),
"intercept_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[3])),
"slope_se" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[4])),
"intercept_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[7])),
"slope_p" = unlist(lapply(LPI_list_lm, function(x) summary(x)$coeff[8]))
), n > 5)
warnings()
